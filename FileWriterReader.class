package gitlet;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

public class FileWriterReader implements Serializable {
    public FileWriterReader() {
    }

    static void writeFile(String str, File dir, String filename) {
        File outFile = new File(dir, filename);

        try {
            Utils.writeContents(outFile, new Object[]{str});
        } catch (IllegalArgumentException var5) {
            throw new IllegalArgumentException(var5.getMessage());
        }
    }

    static void writeFile(Commit obj, File dir, String filename) {
        Commit commitToWrite = obj;
        File outFile = new File(dir, filename);

        try {
            ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(outFile));
            out.writeObject(commitToWrite);
            out.close();
        } catch (IOException var6) {
            throw new IllegalArgumentException(var6.getMessage());
        }
    }

    static void writeFile(StagingArea obj, File dir, String filename) {
        StagingArea stagingAreaToWrite = obj;
        File outFile = new File(dir, filename);

        try {
            ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(outFile));
            out.writeObject(stagingAreaToWrite);
            out.close();
        } catch (IOException var6) {
            throw new IllegalArgumentException(var6.getMessage());
        }
    }

    static Commit readCommit(File file) {
        Commit obj;
        try {
            ObjectInputStream inp = new ObjectInputStream(new FileInputStream(file));
            obj = (Commit)inp.readObject();
            inp.close();
        } catch (ClassNotFoundException | IOException var3) {
            obj = null;
        }

        return obj;
    }

    static StagingArea readStagingArea(File file) {
        StagingArea obj;
        try {
            ObjectInputStream inp = new ObjectInputStream(new FileInputStream(file));
            obj = (StagingArea)inp.readObject();
            inp.close();
        } catch (ClassNotFoundException | IOException var3) {
            obj = null;
        }

        return obj;
    }
}
